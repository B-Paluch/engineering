---

# How do we want it implemented
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: local-storage
#spec:
#  storageClassName: default
#  capacity:
#    storage: 2Gi
#  accessModes:
#    - ReadWriteOnce
#  persistentVolumeReclaimPolicy: Retain
#---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
#  serviceName: "postgres"
  selector:
    matchLabels:
      app: postgres
  replicas: 2
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: postgres-volume-storage
          persistentVolumeClaim:
            claimName: database-persistent-volume-claim
      containers:
        - name: postgres
          image: bfinger1997/postgres
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
#          volumeMounts:
#            - mountPath: /var/lib/postgresql/data
#              name: postgres-volume-storage
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: uploader-config
  labels:
    app: uploader
data:
  UPLOADER_PORT: "8999"
  BROKER_IP: kafka
  BROKER_PORT: "9092"
  UPLOADER_USERNAME: docker
  UPLOADER_PASSWORD: "qwe123"
  POSTGRES_IP: postgres
  POSTGRES_PORT: "5432"
  PG_PORT: "5432"
  UPLOADER_DB: uploader
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uploader
spec:
  selector:
    matchLabels:
      app: uploader
  replicas: 2
  template:
    metadata:
      labels:
        app: uploader
    spec:
      containers:
        - name: uploader
          image: bfinger1997/uploader
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8999
          envFrom:
            - configMapRef:
                name: uploader-config
---
apiVersion: v1
kind: Service
metadata:
  name: uploader
  labels:
    app: uploader
spec:
  type: LoadBalancer
  ports:
  - port: 8999
  selector:
    app: uploader